name: Deploy to EC2

on:
  push:
    branches:
      - main  # Cambia esto si tu rama principal tiene otro nombre

jobs:
  install_dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Actualización a la versión 3

      - name: Set up SSH
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          # Guardar la clave privada en un archivo temporal
          echo "$EC2_SSH_KEY" > ssh_key
          chmod 600 ssh_key

      - name: Install dependencies on EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          ssh -i ssh_key -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
            # Instalar pm2 globalmente si no está instalado
            if ! command -v pm2 &> /dev/null
            then
                echo "pm2 no está instalado. Instalando pm2..."
                sudo npm install -g pm2
            fi

            # Asegurarse de que el directorio de la aplicación existe
            cd /home/ec2-user/proyectos/Venta-Tickets || exit 1

            # Instalar dependencias de Node.js
            echo "Instalando dependencias..."
            npm install

            # Verificar si express está instalado
            if ! npm list express &>/dev/null; then
              echo "Express no está instalado, instalando express..."
              npm install express --save
            fi
          EOF

      - name: Clean up
        run: rm ssh_key

  deploy:
    runs-on: ubuntu-latest
    needs: install_dependencies  # Ejecutar el job de despliegue solo después de que el de instalación finalice correctamente

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Actualización a la versión 3

      - name: Set up SSH
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          # Guardar la clave privada en un archivo temporal
          echo "$EC2_SSH_KEY" > ssh_key
          chmod 600 ssh_key

      - name: Deploy application on EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          ssh -i ssh_key -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
            # Asegurarse de que el directorio de la aplicación existe
            cd /home/ec2-user/proyectos/Venta-Tickets || exit 1

            # Actualizar el repositorio con el último código
            git pull origin main

            # Reiniciar la aplicación usando pm2 con el nuevo nombre
            pm2 restart mi_app_node || pm2 start app.js --name mi_app_node
          EOF

      - name: Clean up
        run: rm ssh_key
